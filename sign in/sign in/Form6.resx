<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>